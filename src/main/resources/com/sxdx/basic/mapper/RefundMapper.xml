<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sxdx.basic.mapper.RefundMapper">
  <resultMap id="BaseResultMap" type="com.sxdx.basic.bean.Refund">
    <id column="refundId" jdbcType="INTEGER" property="refundid" />
    <result column="receivablesId" jdbcType="INTEGER" property="receivablesid" />
    <result column="contractId" jdbcType="INTEGER" property="contractid" />
    <result column="refundAmount" jdbcType="REAL" property="refundamount" />
    <result column="refundTime" jdbcType="TIMESTAMP" property="refundtime" />
    <result column="createrId" jdbcType="INTEGER" property="createrid" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="ifReceipt" jdbcType="VARCHAR" property="ifreceipt" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    refundId, receivablesId, contractId, refundAmount, refundTime, createrId, createTime, 
    ifReceipt, remark
  </sql>
  <select id="selectByExample" parameterType="com.sxdx.basic.bean.RefundExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from refund
    where refundId = #{refundid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from refund
    where refundId = #{refundid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sxdx.basic.bean.RefundExample">
    delete from refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sxdx.basic.bean.Refund">
    insert into refund (refundId, receivablesId, contractId, 
      refundAmount, refundTime, createrId, 
      createTime, ifReceipt, remark
      )
    values (#{refundid,jdbcType=INTEGER}, #{receivablesid,jdbcType=INTEGER}, #{contractid,jdbcType=INTEGER}, 
      #{refundamount,jdbcType=REAL}, #{refundtime,jdbcType=TIMESTAMP}, #{createrid,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{ifreceipt,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sxdx.basic.bean.Refund">
    insert into refund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="refundid != null">
        refundId,
      </if>
      <if test="receivablesid != null">
        receivablesId,
      </if>
      <if test="contractid != null">
        contractId,
      </if>
      <if test="refundamount != null">
        refundAmount,
      </if>
      <if test="refundtime != null">
        refundTime,
      </if>
      <if test="createrid != null">
        createrId,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="ifreceipt != null">
        ifReceipt,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="refundid != null">
        #{refundid,jdbcType=INTEGER},
      </if>
      <if test="receivablesid != null">
        #{receivablesid,jdbcType=INTEGER},
      </if>
      <if test="contractid != null">
        #{contractid,jdbcType=INTEGER},
      </if>
      <if test="refundamount != null">
        #{refundamount,jdbcType=REAL},
      </if>
      <if test="refundtime != null">
        #{refundtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createrid != null">
        #{createrid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="ifreceipt != null">
        #{ifreceipt,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sxdx.basic.bean.RefundExample" resultType="java.lang.Long">
    select count(*) from refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update refund
    <set>
      <if test="record.refundid != null">
        refundId = #{record.refundid,jdbcType=INTEGER},
      </if>
      <if test="record.receivablesid != null">
        receivablesId = #{record.receivablesid,jdbcType=INTEGER},
      </if>
      <if test="record.contractid != null">
        contractId = #{record.contractid,jdbcType=INTEGER},
      </if>
      <if test="record.refundamount != null">
        refundAmount = #{record.refundamount,jdbcType=REAL},
      </if>
      <if test="record.refundtime != null">
        refundTime = #{record.refundtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createrid != null">
        createrId = #{record.createrid,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ifreceipt != null">
        ifReceipt = #{record.ifreceipt,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update refund
    set refundId = #{record.refundid,jdbcType=INTEGER},
      receivablesId = #{record.receivablesid,jdbcType=INTEGER},
      contractId = #{record.contractid,jdbcType=INTEGER},
      refundAmount = #{record.refundamount,jdbcType=REAL},
      refundTime = #{record.refundtime,jdbcType=TIMESTAMP},
      createrId = #{record.createrid,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      ifReceipt = #{record.ifreceipt,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sxdx.basic.bean.Refund">
    update refund
    <set>
      <if test="receivablesid != null">
        receivablesId = #{receivablesid,jdbcType=INTEGER},
      </if>
      <if test="contractid != null">
        contractId = #{contractid,jdbcType=INTEGER},
      </if>
      <if test="refundamount != null">
        refundAmount = #{refundamount,jdbcType=REAL},
      </if>
      <if test="refundtime != null">
        refundTime = #{refundtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createrid != null">
        createrId = #{createrid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="ifreceipt != null">
        ifReceipt = #{ifreceipt,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where refundId = #{refundid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sxdx.basic.bean.Refund">
    update refund
    set receivablesId = #{receivablesid,jdbcType=INTEGER},
      contractId = #{contractid,jdbcType=INTEGER},
      refundAmount = #{refundamount,jdbcType=REAL},
      refundTime = #{refundtime,jdbcType=TIMESTAMP},
      createrId = #{createrid,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      ifReceipt = #{ifreceipt,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where refundId = #{refundid,jdbcType=INTEGER}
  </update>
</mapper>