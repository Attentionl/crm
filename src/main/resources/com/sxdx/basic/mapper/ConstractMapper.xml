<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sxdx.basic.mapper.ConstractMapper">
  <resultMap id="BaseResultMap" type="com.sxdx.basic.bean.Constract">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="term" jdbcType="VARCHAR" property="term" />
    <result column="amount" jdbcType="REAL" property="amount" />
    <result column="signTime" jdbcType="TIMESTAMP" property="signtime" />
    <result column="beginTime" jdbcType="TIMESTAMP" property="begintime" />
    <result column="endTime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="customerId" jdbcType="INTEGER" property="customerid" />
    <result column="employeeId" jdbcType="INTEGER" property="employeeid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, term, amount, signTime, beginTime, endTime, status, customerId, employeeId
  </sql>
  <select id="selectByExample" parameterType="com.sxdx.basic.bean.ConstractExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from constract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from constract
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from constract
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sxdx.basic.bean.ConstractExample">
    delete from constract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sxdx.basic.bean.Constract">
    insert into constract (id, name, term, 
      amount, signTime, beginTime, 
      endTime, status, customerId, 
      employeeId)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{term,jdbcType=VARCHAR}, 
      #{amount,jdbcType=REAL}, #{signtime,jdbcType=TIMESTAMP}, #{begintime,jdbcType=TIMESTAMP}, 
      #{endtime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{customerid,jdbcType=INTEGER}, 
      #{employeeid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sxdx.basic.bean.Constract">
    insert into constract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="term != null">
        term,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="signtime != null">
        signTime,
      </if>
      <if test="begintime != null">
        beginTime,
      </if>
      <if test="endtime != null">
        endTime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="customerid != null">
        customerId,
      </if>
      <if test="employeeid != null">
        employeeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="term != null">
        #{term,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=REAL},
      </if>
      <if test="signtime != null">
        #{signtime,jdbcType=TIMESTAMP},
      </if>
      <if test="begintime != null">
        #{begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="customerid != null">
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="employeeid != null">
        #{employeeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sxdx.basic.bean.ConstractExample" resultType="java.lang.Long">
    select count(*) from constract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update constract
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.term != null">
        term = #{record.term,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=REAL},
      </if>
      <if test="record.signtime != null">
        signTime = #{record.signtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.begintime != null">
        beginTime = #{record.begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null">
        endTime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.customerid != null">
        customerId = #{record.customerid,jdbcType=INTEGER},
      </if>
      <if test="record.employeeid != null">
        employeeId = #{record.employeeid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update constract
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      term = #{record.term,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=REAL},
      signTime = #{record.signtime,jdbcType=TIMESTAMP},
      beginTime = #{record.begintime,jdbcType=TIMESTAMP},
      endTime = #{record.endtime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      customerId = #{record.customerid,jdbcType=INTEGER},
      employeeId = #{record.employeeid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sxdx.basic.bean.Constract">
    update constract
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="term != null">
        term = #{term,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=REAL},
      </if>
      <if test="signtime != null">
        signTime = #{signtime,jdbcType=TIMESTAMP},
      </if>
      <if test="begintime != null">
        beginTime = #{begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        endTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="customerid != null">
        customerId = #{customerid,jdbcType=INTEGER},
      </if>
      <if test="employeeid != null">
        employeeId = #{employeeid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sxdx.basic.bean.Constract">
    update constract
    set name = #{name,jdbcType=VARCHAR},
      term = #{term,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=REAL},
      signTime = #{signtime,jdbcType=TIMESTAMP},
      beginTime = #{begintime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      customerId = #{customerid,jdbcType=INTEGER},
      employeeId = #{employeeid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>